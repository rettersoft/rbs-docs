###
# @name convertDiagram
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.CONVERT?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "diagram": "[CAN_CREATE | action: rbs.order.request.CAN_CREATE | inputPath = $.config]\n[GENERATE_ORDER_ID | \n    action: rbs.order.request.GENERATE_ID |\n    resultPath: $.orderId | \n    outputPath: $.0.response.orderId |\n    errorPath: $.0.response.error |\n    A: $.orderId EXISTS\n]\n[RESERVE_STOCK | \n    action: rbs.stock.request.RESERVE |\n    resultPath: $.stock | \n    outputPath: $.0.response |\n    errorPath: $.0.response.error |\n    A: $.stock.status = true\n]\n[CREATE_PAYMENT |\n    action: rbs.payment.request.CREATE | \n    callbackAction: rbs.payment.event.CREATION_RESULT | \n    timeout: 300, PAYMENT_FAILED |\n    resultPath: $.payment | \n    outputPath: $.0.response |\n    errorPath: $.0.response.error |\n    A: $.payment.status = SUCCESS |\n    B: $.payment.status = COMMIT_NEEDED\n]\n[COMMIT_PAYMENT |\n    action: rbs.payment.request.COMMIT | \n    callbackAction: rbs.payment.event.COMMIT_RESULT | \n    timeout: 300, PAYMENT_FAILED |\n    resultPath: $.payment | \n    outputPath: $.0.response |\n    errorPath: $.0.response.error |\n    A: $.payment.status = SUCCESS\n]\n[COMMIT_STOCK | \n    action: rbs.stock.request.COMMIT |\n    resultPath: $.stock |\n    outputPath: $.0.response |\n    errorPath: $.0.response.error |\n    A: $.stock.status = true\n]\n[CREATE_ORDER |\n    action: rbs.order.request.CREATE |\n    resultPath: $.order | \n    outputPath: $.0.response.order |\n    errorPath: $.0.response.error |\n    A: $.order.orderId = $.orderId\n]\n\n\n[CAN_CREATE] -> [GENERATE_ORDER_ID]\n[CAN_CREATE] -> [INVALID_REQUEST]\n[INVALID_REQUEST] -> [BREAK]\n[GENERATE_ORDER_ID] -> (A)[RESERVE_STOCK]\n[GENERATE_ORDER_ID] -> [BREAK]\n[RESERVE_STOCK] -> (A) [CREATE_PAYMENT]\n[RESERVE_STOCK] -> [OUT_OF_STOCK]\n[OUT_OF_STOCK] -> [ROLLBACK]\n[CREATE_PAYMENT] -> (A) [COMMIT_STOCK]\n[CREATE_PAYMENT] -> (B) [COMMIT_PAYMENT]\n[CREATE_PAYMENT] -> [PAYMENT_FAILED]\n[PAYMENT_FAILED] -> [ROLLBACK]\n[COMMIT_PAYMENT] -> (A)  [COMMIT_STOCK]\n[COMMIT_PAYMENT] -> [PAYMENT_FAILED]\n[COMMIT_STOCK] -> (A) [CREATE_ORDER]\n[CREATE_ORDER] -> (A) [ORDER_CREATED]\n[CREATE_ORDER] -> [ROLLBACK]"
}

###
# @name upsertProcess
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.UPSERT?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "SHIPMENT_JOURNEY",
    "data": {
        "assets": [
            {
                "id": "PENDING",
                "type": "DECISION"
            },
            {
                "id": "PICKING",
                "type": "SERVICE"
            },
            {
                "id": "PACKAGING",
                "type": "SERVICE"
            },
            {
                "id": "READY",
                "type": "SERVICE"
            }
        ],
        "rules": [
            {
                "direction": ["PENDING", "PICKING"],
                "conditions": { "shipmentType": { "EQ": "CARGO" } }
            },
            {
                "direction": ["PENDING", "PACKAGING"],
                "conditions": { "shipmentType": { "EQ": "SLOT" } }
            },
            {
                "direction": ["PICKING", "PACKAGING"]
            },
            {
                "direction": ["PACKAGING", "READY"]
            }
        ]
    }
}

###
# @name getProcess
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.GET?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "SHIPMENT_JOURNEY"
}

###
# @name startProcess
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.START?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "CREATE_ORDER_AND_SHIPMENTS",
    "payload": {
        "address": {
            "shipmentAddress": {
                "addressId": "01EYMX24JNP5439ND40RWM3GPS",
                "name": "Test Address",
                "country": "TÜRKİYE",
                "city": "İSTANBUL",
                "district": "ATAŞEHİR"
            },
            "invoiceAddress": {
                "addressId": "01EYMXKC3JPBGRKQVNM3KP3W31",
                "name": "Test Address",
                "country": "TÜRKİYE",
                "city": "İSTANBUL",
                "district": "ATAŞEHİR"
            }
        },
        "crm": {
            "userId": "c85a5c6f11b1381c3cee0608cd80dec8"
        },
        "cart": {
            "totalPriceToPay": 27810,
            "totalPrice": 30000,
            "serviceFeeDiscount": 900,
            "discount": 3090,
            "appliedPromotions": [
                {
                    "title": "Deneme",
                    "appliedDiscount": 0,
                    "appliedServiceFeeDiscount": 900
                },
                {
                    "appliedDiscount": 0,
                    "appliedServiceFeeDiscount": 0
                },
                {
                    "appliedDiscount": 3090,
                    "appliedServiceFeeDiscount": 0
                }
            ],
            "promotionSuggestions": {
                "minAmountForFreeServiceFee": 13300
            },
            "items": [
                {
                    "merchantId": "AliMerchant",
                    "variantGroupId": "AliVaraiantGroupId",
                    "itemId": "AliItemId",
                    "qty": 3,
                    "product": {
                        "images": [
                            "7208d184-f864-416e-8495-36a7eb897869"
                        ],
                        "attributes": [
                            {
                                "fieldNameLabel": "CanReturnItem",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "CanReturnItem",
                                "valueLabel": "true",
                                "value": true
                            },
                            {
                                "fieldNameLabel": "Description",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "Description",
                                "valueLabel": "Ali description",
                                "value": "Ali description"
                            },
                            {
                                "fieldNameLabel": "test",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "test",
                                "valueLabel": "",
                                "value": ""
                            },
                            {
                                "fieldNameLabel": "uruncesidi",
                                "attType": "LIST",
                                "fieldName": "uruncesidi",
                                "valueLabel": "",
                                "value": ""
                            },
                            {
                                "fieldNameLabel": "ItemFeatureBaran",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "ItemFeatureBaran",
                                "valueLabel": "",
                                "value": ""
                            },
                            {
                                "fieldNameLabel": "isVirtual",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "isVirtual",
                                "valueLabel": "true",
                                "value": true
                            },
                            {
                                "fieldNameLabel": "shortDescription",
                                "attType": "TEXT",
                                "fieldName": "shortDescription",
                                "valueLabel": "",
                                "value": ""
                            },
                            {
                                "badges": [],
                                "listValue": [
                                    "demoCat"
                                ],
                                "attType": "LIST",
                                "fieldName": "categories",
                                "listValueLabel": [
                                    "demoCat"
                                ],
                                "valueLabel": "",
                                "fieldNameLabel": "categories",
                                "value": ""
                            },
                            {
                                "fieldNameLabel": "shortName",
                                "attType": "TEXT",
                                "fieldName": "shortName",
                                "valueLabel": "Ali Product",
                                "value": "Ali Product"
                            },
                            {
                                "badges": [],
                                "listValue": [],
                                "attType": "LIST",
                                "fieldName": "productdetailIcons",
                                "listValueLabel": [],
                                "valueLabel": "",
                                "fieldNameLabel": "productdetailIcons",
                                "value": ""
                            },
                            {
                                "fieldNameLabel": "noDiscount",
                                "attType": "UNKNOWN_TYPE",
                                "fieldName": "noDiscount",
                                "valueLabel": "true",
                                "value": true
                            },
                            {
                                "badges": [],
                                "listValue": [],
                                "attType": "LIST",
                                "fieldName": "productFeature",
                                "listValueLabel": [],
                                "valueLabel": "",
                                "fieldNameLabel": "productFeature",
                                "value": ""
                            }
                        ]
                    },
                    "stock": 1,
                    "price": {
                        "normal": 50000,
                        "discounted": 10000,
                        "priceToPay": 8970
                    }
                }
            ]
        },
        "billing": [
            {
                "amount": 27810,
                "authType": "PRE_AUTH",
                "paymentMethod": "masterpass",
                "providerConfigId": "masterpass1",
                "installmentCount": 3
            }
        ],
        "logistics": {
            "zoneId": "zoneA",
            "note": "Lütfen zili çalmayın!",
            "pools": {
                "type": "CARGO",
                "provider": "AYKARGO",
                "storeId": "STORE_A",
                "fee": 9
            }
        }
    }
}

###
# @name getExecution
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.GET_EXECUTION?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "SHIPMENT_JOURNEY",
    "executionId": "210228ABCDEFGH"
}

###
# @name stopProcess
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.STOP?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "SHIPMENT_JOURNEY",
    "executionId": "210228ABCDEFGH",
    "token": "21022816018NFEBO9S"
}

###
# @name addEvent
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.ADD_EVENT?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "TEST",
    "event": "TES_EVENT"
}

###
# @name removeEvent
POST https://{{host}}/user/action/{{projectId}}/rbs.process.request.REMOVE_EVENT?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "TEST",
    "event": "TES_EVENT"
}

###
# @name trigger
POST https://{{host}}/service/action/{{projectId}}/rbs.order.event.TRIGGER?auth={{accessToken}} HTTP/1.1
Content-Type: application/json

{
    "processId": "CREATE_ORDER_AND_SHIPMENTS",
    "payload": {
        "unknown": "1"
    }
}
